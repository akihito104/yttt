plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    id 'kotlin-kapt'
    alias(libs.plugins.hilt.android)
}

android {
    namespace 'com.freshdigitable.yttt.lib'
    compileSdkPreview = "UpsideDownCake"

    defaultConfig {
        minSdk 26

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"
                ]
            }
        }

        def twitchPFile = rootProject.file("twitch.properties")
        def twitchProperties = new Properties()
        if (twitchPFile.exists()) {
            try (def inputStream = new FileInputStream(twitchPFile)) {
                twitchProperties.load(inputStream)
            }
        }
        buildConfigField("String", "TWITCH_CLIENT_ID",
                "\"${twitchProperties.getOrDefault("twitch_client_id", "")}\"")
        buildConfigField("String", "TWITCH_REDIRECT_URI",
                "\"${twitchProperties.getOrDefault("twitch_redirect_uri", "")}\"")
    }

    buildFeatures {
        buildConfig true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.2"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude("dependencies.txt")
    }
    hilt {
        enableAggregatingTask = true
    }
}

kotlin {
    jvmToolchain(17)
}

dependencies {
    implementation project(":common")
    implementation project(":data-remote-youtube")

    def composeBom = platform(libs.androidx.compose.bom)
    implementation composeBom
    implementation libs.androidx.compose.runtime.livedata
    implementation libs.androidx.navigation.compose
    implementation libs.androidx.hilt.navigation.compose
    androidTestImplementation composeBom
    implementation libs.glide.compose
    implementation libs.accompanist.permissions

    // Choose one of the following:
    // Material Design
    implementation libs.androidx.compose.material
    implementation libs.androidx.compose.material3
    implementation libs.accompanist.themeadapter.material3

    // Android Studio Preview support
    implementation libs.androidx.compose.ui.tooling.preview
    debugImplementation libs.androidx.compose.ui.tooling

    implementation libs.androidx.work.runtime.ktx
    implementation libs.androidx.hilt.work
    kapt libs.androidx.hilt.compiler
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation(libs.androidx.activity.ktx)
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.play.services.base
    implementation libs.play.services.auth

    implementation libs.hilt.android
    kapt libs.hilt.compiler

    implementation libs.androidx.datastore.preferences
    implementation libs.androidx.room.ktx
    implementation libs.androidx.room.runtime
    annotationProcessor libs.androidx.room.compiler
    // To use Kotlin annotation processing tool (kapt)
    kapt libs.androidx.room.compiler
    // To use Kotlin Symbol Processing (KSP)
//    ksp libs.androidx.room.compiler
    implementation libs.glide
    kapt libs.glide.compiler
    implementation(platform(libs.okhttp.bom))
    implementation(libs.okhttp)
    implementation libs.okhttp.logging.interceptor
    implementation libs.okhttp3.integration
    implementation libs.retrofit
    implementation libs.converter.gson

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}
